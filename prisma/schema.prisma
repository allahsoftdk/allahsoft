// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native","debian-openssl-1.1.x"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  name String @db.VarChar(255) @unique
  email String? @unique @db.VarChar(255) 
  password String @db.Text()
  token String? @db.Text()
  created_at DateTime @db.DateTime() @default(now())
  update_at DateTime @db.DateTime() @default(now())
  posts Post[]
  user_followers User_follower[]
  post_comments Post_comment[]
  post_likes Post_like[]
  chat_messages Chat_message[]
  chat_room_participants Chat_room_participant[]
  roles_users Role_user[]
}

model Prayer_alarm {
  id Int @id @default(autoincrement())
  prayer_alarm DateTime @db.DateTime()
}

model Setting{
  id Int @id @default(autoincrement())
  setting_name String @db.VarChar(255)
  setting_value String @db.VarChar(255)
}

model Post {
  id       Int  @id @default(autoincrement())
  description String @db.TinyText()
  resources String @db.VarChar(255)
  userId   User @relation(fields: [fk_user], references: [id])
  fk_user Int
  post_comments Post_comment[]
  post_likes Post_like[]
}

model User_follower{
 id Int @id @default(autoincrement())
 follower_id Int @db.Int()
 userId User @relation(fields: [fk_user], references: [id])
 fk_user Int
}

model Post_comment{
  comment String @db.TinyText()
  postCommentId Post @relation(fields: [fk_post], references: [id])
  fk_post Int
  userId   User @relation(fields: [fk_user], references: [id])
  fk_user Int
  @@id([fk_post, fk_user])
}


model Post_like{
  postId Post @relation(fields: [fk_post], references: [id])
  fk_post Int
  userId   User @relation(fields: [fk_user], references: [id])
  fk_user Int
  @@id([fk_post, fk_user])
}

model Chat_room{
  id Int @id @default(autoincrement())
  name String @db.VarChar(255)
  chat_messages Chat_message[]
  chat_room_participants Chat_room_participant[]
}

model Chat_message{
  messages String @db.VarChar(255)
  chat_rooms Chat_room @relation(fields: [fk_chat_room], references: [id])
  fk_chat_room Int
  userId  User @relation(fields: [fk_user], references: [id])
  fk_user Int
  @@id([fk_chat_room, fk_user])
}

model Chat_room_participant{
  chat_rooms Chat_room @relation(fields: [fk_chat_room], references: [id])
  fk_chat_room Int
  userId  User @relation(fields: [fk_user], references: [id])
  fk_user Int
  @@id([fk_chat_room, fk_user])
}

model Role{
  id Int @id @default(autoincrement())
  name String @db.VarChar(255)
  roles_users Role_user[]
}

model Role_user{
  roles Role @relation(fields: [fk_roles], references: [id])
  fk_roles Int
  userId User @relation(fields: [fk_user], references: [id])
  fk_user Int
  @@id([fk_roles, fk_user])
}